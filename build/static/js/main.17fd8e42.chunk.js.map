{"version":3,"sources":["services/contacts.js","components/Person.js","components/Form.js","components/Search.js","components/Success.js","components/Error.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","deletePerson","name","number","onClick","Form","addPerson","newPerson","handlePersonChange","onSubmit","type","value","onChange","Search","searchContact","handleSearchChange","placeholder","Success","message","className","Error","App","useState","persons","setPersons","setNewPerson","setSearchContact","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","contactService","initialContacts","personsToShow","filter","toLowerCase","includes","event","preventDefault","personObject","some","p","window","confirm","find","changeNumber","returnPerson","map","setTimeout","concat","target","catch","error","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17fd8e42.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data);    \n}\n\nexport default { getAll, create, update, remove };","import React from 'react';\n\nconst Person = ({ person, deletePerson }) => {\n    return (\n        <div>\n            <dt>{person.name}</dt>\n            <dd>{person.number}</dd>\n            <dd><button onClick={deletePerson}>Delete</button></dd>\n        </div>\n    )\n}\n\nexport default Person;","import React from 'react';\n\nconst Form = ({ addPerson, newPerson, handlePersonChange }) => {\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input type=\"text\" name=\"name\" value={newPerson.name} onChange={handlePersonChange}/>\n            </div>\n            <div>\n                number: <input type=\"text\" name=\"number\" value={newPerson.number} onChange={handlePersonChange}/>\n            </div>         \n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form;\n","import React from 'react';\n\nconst Search = ({ searchContact, handleSearchChange }) => {\n    return (\n        <div>\n            <input type=\"text\" value={searchContact} onChange={handleSearchChange} placeholder=\"Search Contact\"/>\n        </div>\n    )\n}\n\nexport default Search;","const Success = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <div className=\"success\">\n            {message}\n        </div>\n    )\n}\n\nexport default Success;","const Error = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Error;","import React, { useState, useEffect } from 'react';\n\n// Services\nimport contactService from './services/contacts';\n\n// components\nimport Person from './components/Person';\nimport Form from './components/Form';\nimport Search from './components/Search';\nimport Success from './components/Success';\nimport Error from './components/Error';\n\n/* \n* 1. Someone says having this in a condition slows things down\n    so I make it stand alone. I am not sure about this. Will have to look into it.\n*/\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [newPerson, setNewPerson] = useState({ name: '', number: '',});\n  const [searchContact, setSearchContact] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts);\n      })\n  }, []);\n\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const { name, number } = newPerson;\n    const personObject = {\n      name,\n      number,\n    }\n\n    const isPerson = persons.some(p => p.name === name); // 1\n    if (isPerson) {\n      if (window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)) {\n        const person = persons.find(p => p.name === name);\n        const changeNumber = { ...person, number: number }\n        \n        contactService\n          .update(person.id, changeNumber)\n          .then(returnPerson => {\n            setPersons(persons.map(p => p.id !== person.id ? p : returnPerson));\n            setNewPerson({ name: '', number: '', });\n            setSuccessMessage(\n              `Updated  ${name} number`\n            )\n            setTimeout(() => {\n              setSuccessMessage(null);\n            }, 5000)\n          })\n        \n      } else {\n        return setNewPerson({ name: '', number: '', }); // reset when user clicks on cancel\n      }\n    } // this condition does not need an else part\n\n    contactService\n      .create(personObject)\n      .then(returnPerson => {\n        setPersons(persons.concat(returnPerson));\n        setNewPerson({ name: '', number: '', });\n        setSuccessMessage(\n          `Added  ${name}`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000)\n    })\n    \n    \n  }\n\n\n\n  const handleDelete = id => {\n    const person = persons.find(p => p.id === id);\n    \n    if (window.confirm(`Delete ${person.name} ?`)) {\n      contactService\n        .remove(id)\n        .then(returnPerson => {\n          setPersons(persons.filter(p => p.id !== id));\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Information of ${person.name} has already been removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== id));\n        })\n    }\n  }\n\n  const handlePersonChange = (event) => {\n    const { name, value } = event.target;\n    setNewPerson({\n      ...newPerson,\n      [name]: value,\n    });\n  }\n\n  const handleSearchChange = (event) => {\n    setSearchContact(event.target.value);\n  }\n\n\n\n  const personsToShow = !searchContact\n  ? persons\n  : persons.filter(person => {\n    return person.name.toLowerCase().includes(searchContact.toLowerCase());\n  });\n\n\n\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <h2>Add a new contact</h2>\n      <Form \n        addPerson={addPerson}\n        newPerson={newPerson}\n        handlePersonChange={handlePersonChange}\n      />\n\n      <h2>Contacts</h2>\n      <Success message={successMessage} />\n      <Error message={errorMessage} />\n      <Search \n        searchContact={searchContact} \n        handleSearchChange={handleSearchChange} \n      />\n      <dl className=\"contact\">\n          {personsToShow.map(person => \n            <Person \n              key={person.id} \n              person={person} \n              deletePerson={() => handleDelete(person.id)} \n            />\n          )}\n      </dl>\n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}